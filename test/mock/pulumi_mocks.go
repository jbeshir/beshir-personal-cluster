// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pulumi/pulumi/sdk/v3/go/pulumi (interfaces: MockResourceMonitor)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	resource "github.com/pulumi/pulumi/sdk/v3/go/common/resource"
	pulumi "github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MockMockResourceMonitor is a mock of MockResourceMonitor interface.
type MockMockResourceMonitor struct {
	ctrl     *gomock.Controller
	recorder *MockMockResourceMonitorMockRecorder
}

// MockMockResourceMonitorMockRecorder is the mock recorder for MockMockResourceMonitor.
type MockMockResourceMonitorMockRecorder struct {
	mock *MockMockResourceMonitor
}

// NewMockMockResourceMonitor creates a new mock instance.
func NewMockMockResourceMonitor(ctrl *gomock.Controller) *MockMockResourceMonitor {
	mock := &MockMockResourceMonitor{ctrl: ctrl}
	mock.recorder = &MockMockResourceMonitorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMockResourceMonitor) EXPECT() *MockMockResourceMonitorMockRecorder {
	return m.recorder
}

// Call mocks base method.
func (m *MockMockResourceMonitor) Call(arg0 pulumi.MockCallArgs) (resource.PropertyMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Call", arg0)
	ret0, _ := ret[0].(resource.PropertyMap)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Call indicates an expected call of Call.
func (mr *MockMockResourceMonitorMockRecorder) Call(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Call", reflect.TypeOf((*MockMockResourceMonitor)(nil).Call), arg0)
}

// NewResource mocks base method.
func (m *MockMockResourceMonitor) NewResource(arg0 pulumi.MockResourceArgs) (string, resource.PropertyMap, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewResource", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(resource.PropertyMap)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// NewResource indicates an expected call of NewResource.
func (mr *MockMockResourceMonitorMockRecorder) NewResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewResource", reflect.TypeOf((*MockMockResourceMonitor)(nil).NewResource), arg0)
}
